@page "/C1"
@page "/C1/{Property1}"
@using System.Threading.Tasks
@layout MainLayout

<div>ShoudUseMarkup</div>

<a href="C2">
    <span>Goto 
        "
        C2</span>
    @field2 DEF
</a>

<div @attributes="this.As<Dictionary<string, object>>()"></div>
<GenericComponent1 T1="int" T2="string" @attributes="this.As<Dictionary<string, object>>()"></GenericComponent1>

<CascadingValue TValue="Component1" Name="C1" Value="this" IsFixed="true">
    <Component2 Property1="1" Property2="1" Context="a">
        Component2.1 @a
        <Component2 Property1="1" Property2="1" Context="aa">
            Component2.Component2 @a @aa DEF
        </Component2>
    </Component2>
</CascadingValue>
<Component2 Property1="1" Property2="1" Context="i">
    <ChildContent>
        Component2.2
    </ChildContent>
    <Property3>
        Component2.Property3
    </Property3>
    <Property4>
        Component2.Property4
    </Property4>
</Component2>
@if ((field1 & 1) == 0)
{
    <input @ref="input" @bind-value="field2" />
}
@* <input @bind-value:get="field1" @bind-value:set="field1" @bind-value:event="keyup" /> *@
<button @onclick="Clicked" @onclick:stopPropagation @onclick:preventDefault>Click Me</button>
@for (int _i = 0; _i < 10; _i++)
{
    <itext @key="_i">@_i</itext>
    var i = _i;
    <div class="abc @field1 @field2 @i" @key="i">
        @(i + ".") ABC @i @field1 @field2
    </div>
}

<div class="def">
    ABC @field1
    @view
    @for (int _i = 0; _i < 10; _i++)
    {
        var i = _i;
        <div class="abc @field1 @field2 @i" @key="i">
            @i . ABC @i @field1 @field2
        </div>
    }
</div>
@for (int _i = 0; _i < 10; _i++)
{
    var i = _i;
    <div class="abc @field1 @field2 @i" @key="i">
        @i . DEF @field1 @field2
    </div>
}

@{
    RenderFragment view2 = @<span>@prope</span>;
}
@view2

@if (descriptor != null)
{
    <h1>Version: @descriptor.Version</h1>
    <h1>Size: @descriptor.Size</h1>
    @* <table>
        <tr>
            <td>file.Path</td>
            <td>file.Hash</td>
            <td>file.Size</td>
            <td>file.DateModified</td>
        </tr>
        @foreach (var file in descriptor.Files)
        {
            <tr @key="file">
                <td>@file.Path</td>
                <td>@file.Hash</td>
                <td>@file.Size</td>
                <td>@file.DateModified</td>
            </tr>
        }
    </table> *@
}
@html

@code {
    int prope;
    RenderFragment V1() =>@<span>@prope</span>;
    RenderFragment V2()
    {
        return @<span>@prope</span>;
    }
}